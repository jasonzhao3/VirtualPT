20140511
========
1. Add bootstrap UI: https://github.com/seyhunak/twitter-bootstrap-rails
2. Connect with Parse: 
https://github.com/adelevie/parse_resource/blob/master/README.md
3. Difficulty: can't update relation using ruby API ==> has_many functions cannot be found
4. Due to the difficulty in server side implementation, now try client-side javascript SDK => TODO: possible security issue 
5. Front-end javascript also has issue with the pointer type and relations => try to DIY with REST API  => otherwise may need use node.js


6. Rails can create custom helper modules => as long as you include them in your controller, it will become a cross-controller helper module. In this way, we don't need swap everything into appliction_helper.rb

7. Finally use REST apis with Net library. So miserable to try everything out!!!!
  - RESTful API: nil is for default value, similar to [NSNull null]
  - Nestful doesn't work
  - find ruby library also works for {__type: pointer} , but doesn't work for nil 




20140512
==========
1. add date picker UI: http://www.eyecon.ro/bootstrap-datepicker/
2. now can create a single exercise schedule
3. (TODO) per-user library
4. (TODO) profile


Note:
1. Now profile is just an ordinary table => in the future , adapt it to a relational table, as injury and goals can be standardized.
2. helper module: app/helpers/ is for view helper methods and shouldn't contain modules that are solely for mixing into model
3. one place you could put the module is within lib/. This is for code that doesn't really fit anywhere within app/ and is often the initial home of loosely coupled code
4. Should focus on one thing each time => know what to do in next immediate step 
5. Tricky part about Parse RESTful API: you can create a brand new class, but if you add a record to a exsited class, you can not add more columns dynamically. Also, if a column existed while your input data is conflict with that data, you'll also get an error. 
6. Make a silly mistake for quite a while => edit the createUser function, but really meant to createObject function. Once something weird happens, don't search immediately. Think carefully again what I want to do, and why I do it
7. 


TODO:
1. ajax for creating new schedule? Would it be faster in backend?
2. Nested forms and batch endpoint operation for several schedules
3. support csv uploading for relational table, e.g. schedule table => better way than query every user?? 
4. show facebook name rather than random string name && link facebook user with the custom user
5. sync core data with web server


Questions:
1. how does the Gemfile work? => bundle install will update everytime?
2. how does the module convention work in rails? 
3. how does the configuration work in rails?
4. how does the instance method and class method work in ruby?
5. how to better organize my model and ParseModel? In my current solution, I can't use any dot notation => but just use my own dictionary parsed from string
6. is there any developer conference where I can meet other developers and share some experience?
7. how can I build a application to manage my questions better? 





Milestone meeting:
1. metrics for analytics:
   - every login timestamps
   - timer length (percentage complete)
   - evaluation post-workout
   - you can't cheat  --> basically background pause
   - Notes
   - Dashboards (manage a large population -- progress tracker metrics


 2. progress tracker:
   - what you have accomplished?  e.g. how many of reps you have already got
   - 

 3. simple question about reminder?
   - sync with the calendar => find the time slot

 4. integrate text mssage

 5. Exercise Package -- standardize way
    reps, holds, and 



20140521 Meeting
================
1. My exercise => My training
2. Popout window between each exercise?
3. force them to do evaluation => no yes/no choice
4. Instruction => Instructions
5. Oops => please let your physician schedule that online
6. Web App: add multiple 
   - Dashboard of patients => 
   - start date => 



20140529
=======
1. web app: 
   - start date, end date, frequency  (and calendar visualization -- small pop-out modification)
   - active exercise / completed exercise list for each patient (ajax adding items)
   - list of every patient (maybe of tomorrow)
   - view the patient's profile / motivation

2. utilities:
   - chat icon for messaging Phyicision
   - phone icon 

3. Motivation: add one more tab for last question
   inspiration need add one more question

4. random rewards => push notification


LONG-TERM:
1. integration
2. open table -- for health care  (both-sides)

compstudy




20140613
=======
1. Encrptyed text messages between the physician and the patient --> 
2. physical therapist can flag the  daily check-in table

